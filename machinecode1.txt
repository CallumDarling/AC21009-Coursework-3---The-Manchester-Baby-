00000000000000000000000000000000

----- 000 //JMP - set CI to content of Store location
----- 100 //JRP - add content of store location to location
----- 010 //LDN - copy variable to accumulator
----- 110 //STO - copy accumulator to Store location - saves answer
----- 001 or 101 //SUB - subtract variable from accumulator to get sum (negated)
----- 011 //CMP - skip if accumulator value is negative
----- 111 //STP - stop processor

00000000000000000000000000000000

00000000000000000000000000000000
01101000000000100000000000000000 // LDN 
11011000000001010000000000000000 // SUB - subtract, A-S
11101000000001010000000000000000 // SUB - subtract second number, A-S	
00111000000001100000000000000000 // STO - save to VAR (to last)
00011000000000100000000000000000 // LDN 
10011000000001010000000000000000 // SUB
11101000000001010000000000000000 // SUB
11101000000001010000000000000000 // SUB
10011000000001010000000000000000 // SUB
10111000000001100000000000000000 // STO - save to VAR (to last)
01011000000000100000000000000000 // LDN
01101000000001010000000000000000 // SUB
01111000000001100000000000000000 // STO - save to VAR (to last)
11011000000000100000000000000000 // LDN
11111000000001100000000000000000 // STO - save to VAR (to last)
00000000000001110000000000000000 //STOP - below store variables
11101011110011000000000000000000 // - VAR 15091 - 22 - = 01101
11001101010000000000000000000000 // - VAR 821 - 23 - = 11101
10001101000000000000000000000000 // - VAR 141 - 24 - = 00011
11101000000000000000000000000000 // - VAR 29 - 25 - = 10011
11010000011111110100000000000000 // - VAR 213501 - 26 - = 01011
11110001001000000000000000000000 // - VAR 1929 - 27 - = 11011
00000000000000000000000000000000 // - VAR 0 - mySum - 28 - = 00111
00000000000000000000000000000000 // - VAR 0 - mySum2 - 29 -  = 10111
00000000000000000000000000000000 // - VAR 0 - mySum3 - 30 -  = 01111
00000000000000000000000000000000 // - VAR 0 - mySum4 - 31 -  = 11111